
#Deep copy is a process in which the copying process occurs recursively. 
#It means first constructing a new collection object and then recursively populating it with copies of the child objects found in the original. 
#In case of deep copy,  any changes made to a copy of object do not reflect in the original object.
#I have taken help of geeks for geeks website for this code.
# importing copy module 

import copy 
  
# initializing list 1  
li1 = [1, 2, 5, 4] 
  

# using copy for shallow copy   
li2 = copy.copy(li1)  
print (li2)
# using deepcopy for deepcopy   
li3 = copy.deepcopy(li1) 
print (li3)


import copy 
  
# initializing list 1 
li1 = [1, 2, 3, 4] 
  
# using deepcopy to deep copy  
li2 = copy.deepcopy(li1) 
  
# original elements of list 
print ("The original elements before deep copying") 
for i in range(0,len(li1)): 
    print (li1[i],end=" ") 
  
print("\n") 
  
# adding and element to new list 
li2[2] = 7
  
# Change is reflected in l2  
print ("The new list of elements after deep copying ") 
for i in range(0,len( li1)): 
    print (li2[i],end=" ") 
  
print("\n") 
  
# Change is NOT reflected in original list 
# as it is a deep copy 
print ("The original elements after deep copying") 
for i in range(0,len( li1)): 
    print (li1[i],end=" ")
